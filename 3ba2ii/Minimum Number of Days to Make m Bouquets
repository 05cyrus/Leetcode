class Solution {
public:
    bool possible(vector<int>bloomDay,int m,int k,int mid){
        int len=0;
        int cnt=0;
        int n=bloomDay.size();
        for(int i=0;i<n;i++){
                if(bloomDay[i]<=mid){
                    len++;
                        if(len==k){
                        cnt++;
                        len=0;
                    }
                }
                else len=0;
            }
        return cnt>=m;
        }
    int minDays(vector<int>& bloomDay, int m, int k) {
        int n=bloomDay.size();
        if(n<(long long) m*k) return -1;
        int left=*min_element(bloomDay.begin(),bloomDay.end());
        int right=*max_element(bloomDay.begin(),bloomDay.end());
        int result=0;
        while(left<=right){
            int mid=(left+right)/2;
            if(possible(bloomDay,m,k,mid)){
                result=mid;
                right=mid-1;
            }
            else{
                left=mid+1;
            }
        }
        return result;
    }
};
