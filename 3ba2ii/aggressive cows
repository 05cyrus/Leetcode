bool possible(vector<int> stalls,int k,int mid,int n){
    
    int cow=1;
    int last=stalls[0];
    for(int i=0;i<n;i++){
        int diff=stalls[i]-last;
        if(diff>=mid) {
            cow++;
            last=stalls[i];
        }
        if(cow>=k) return true;
    }
    return false;
}

int aggressiveCows(vector<int> &stalls, int k)
{
    //    Write your code here.
    int n=stalls.size();
    sort(stalls.begin(),stalls.end());
    int left=1;
    int right=stalls[n-1]-stalls[0];
    int ans=-1;
    while(left<=right){
        int mid=(left+right)/2;
        if(possible(stalls,k,mid,n)){
            left=mid+1;
            ans=mid;
        }
        else{
            right=mid-1;
        }
    }
    return ans;
}
